-# frozen_string_literal: true
#notif-dropdown
  button.btn data-toggle="dropdown" type="button"
    = octicon 'bell'
    - unless @notifications.blank?
      /span.badge.bg-secondary style="position: absolute;right: 0" = @notifications.count
      = octicon 'dot-fill', style: 'position: absolute; right: 5px; top: 3px; fill: grey'
  .dropdown-menu.dropdown-menu-lg.notification-menu.dropdown-menu-right role="menu"
    .text-center.text-primary.font-weight-bold.border-bottom.border-light.py-3
      | Notifications
    .list-group.list-group-flush.overflow-auto style="max-height: 300px"
      - if @notifications.blank?
        .list-group-item.list-group-item-action.border-bottom.border-light
          .text-muted.text-center
            | You have no unread notifications.
      - else
        - @notifications.each do |notification|
          - notification = notification.to_notification
          .list-group-item.list-group-item-action.border-bottom.border-light
            .row
              .col-2.text-center.row.g-0
                = octicon 'check-circle', height: 25, class: 'align-self-center'
              .col-10.pl-1
                = notification.message
                button.btn.btn-sm.float-right [
                  data-reflex="click->Notifications::Dropdown::ComponentReflex#read_notification"
                  data-id="#{notification.record.id}"
                  data-reflex-root="#notif-dropdown"
                ]
                  | Read
    .nav.nav-fill.mt-2
      a.btn.btn-sm.nav-link href="#{notifications_path}" Manage notifications
      - if @notifications.count > 1
        button.btn.btn-sm.nav-link [
          data-reflex="click->Notifications::Dropdown::ComponentReflex#read_all_notifications"
          data-reflex-root="#notif-dropdown"
        ]
          | Mark all as read

